package businessLayer;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.*;

import componentLayer.CSVComponent;
import componentLayer.Filter;
import dataLayer.CSVDocumentModelCity;
import dataLayer.City;

public class CityHandler {
	
	private List<Filter> filters;
	private CSVComponent reader = new CSVComponent();
	
	public List<City> ReadAll() {
		filters = new ArrayList<Filter>();
		return reader.<City>Read(filters, new City());
	}
	
	public List<City> ReadAllCapitals(){
		filters = new ArrayList<Filter>();
		filters.add(new Filter(CSVDocumentModelCity.CAPITAL, true));
		List<City> returner = reader.<City>Read(filters, new City());
		
		returner.sort((City c1, City c2) -> c1.getName().compareTo(c2.getName()));
		
		return returner;
	}
	
	public City ReadByIBGEId(Integer pIBGEId){
		filters = new ArrayList<Filter>();
		filters.add(new Filter(CSVDocumentModelCity.IBGE_ID, pIBGEId));
		
		List<City> returner = reader.<City>Read(filters, new City());
		return returner.get(0);
	}
	
	public List<City> ReadByState(String pStateUF){
		filters = new ArrayList<Filter>();
		filters.add(new Filter(CSVDocumentModelCity.UF, pStateUF));
		
		List<City> returner = reader.<City>Read(filters, new City());
		return returner;
	}

	public int TotalRecords(){
		filters = new ArrayList<Filter>();
		List<City> returner = reader.<City>Read(filters, new City());
		return returner.size();
	}
	
	public HashMap<String, Integer> CountByState(){		
		HashMap<String, Integer> count = new HashMap<String, Integer>();
		for(City record : this.ReadAll()) {
			Integer qtd = count.get(record.getUf()).intValue();
			count.put(record.getUf(), qtd++);
		}
		return count;
	}
	
	public String StateWithLowerQtdOfCities() {
		Map<String, Integer> counted = this.CountByState();
		
		int qtd = Integer.MAX_VALUE;
		String lower = "";
		for(Map.Entry<String,Integer> e : counted.entrySet()) {
			if(e.getValue() < qtd) {
				lower = e.getKey();
				qtd = e.getValue();
			}
		}
		
		return lower;
	}
}
